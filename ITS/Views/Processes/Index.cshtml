@model IEnumerable<KobiAsITS.Models.Process>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h1>İşleme Alınan Talepler</h1>

<div class="row">
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Onaylı Talepler Görüntülenmektedir.</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="table-responsive" style="text-align:center">
                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Talep Açıklaması</th>
                                <th>Onaylayan Kişi</th>
                                <th>Onaylama Tarihi</th>
                                <th>İlerleme Durumu</th>
                                <th>Tahmini Bitiş Tarihi</th>
                                <th>Kesin Bitiş Tarihi</th>
                                <th>İşlem Durumu</th>
                                <th>Birim Önceliği</th>
                                @if (User.IsInRole("Admin"))
                                {
                                    <th>İşlemler</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Id)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Request.RequestDescription)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.User.UserFirstName)
                                        @Html.DisplayFor(modelItem => item.User.UserLastName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.VerificationDate)
                                    </td>

                                    <td>
                                        %@Html.DisplayFor(modelItem => item.Request.RequestProgressStatus)
                                        <div class="progress progress-small">
                                            <div style="width:@Html.DisplayFor(modelItem => item.Request.RequestProgressStatus)%;" class="progress-bar"></div>
                                        </div>
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.ExpectedEndDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ExpirationDate)
                                    </td>
                                    @{
                                        if (item.Status == KobiAsITS.Enums.ValueEnums.ContinueByteStatus)
                                        {
                                            <td>@KobiAsITS.Enums.ValueEnums.Continue</td>
                                        }
                                        else if (item.Status == KobiAsITS.Enums.ValueEnums.PauseByteStatus)
                                        {
                                            <td>@KobiAsITS.Enums.ValueEnums.Pause</td>
                                        }
                                        else if (item.Status == KobiAsITS.Enums.ValueEnums.CompletedByteStatus)
                                        {
                                            <td>@KobiAsITS.Enums.ValueEnums.Completed</td>
                                        }

                                    }
                                    @{
                                        if (item.Priority == @KobiAsITS.Enums.ValueEnums.LowPriorityByte)
                                        {
                                            <td>@KobiAsITS.Enums.ValueEnums.LowPriority</td>
                                        }
                                        else if (item.Priority == @KobiAsITS.Enums.ValueEnums.MediumPriorityByte)
                                        {
                                            <td>@KobiAsITS.Enums.ValueEnums.MediumPriority</td>
                                        }
                                        else if (item.Priority == @KobiAsITS.Enums.ValueEnums.HighPriorityByte)
                                        {
                                            <td>@KobiAsITS.Enums.ValueEnums.HighPriority</td>
                                        }
                                        else if (item.Priority == @KobiAsITS.Enums.ValueEnums.UrgentPriorityByte)
                                        {
                                            <td>@KobiAsITS.Enums.ValueEnums.UrgentPriority</td>
                                        }
                                        else if (item.Priority is null)
                                        {
                                            <td>Seçim Yapılmadı</td>
                                        }
                                    }
                                    @if (User.IsInRole("Admin"))
                                    {
                                        if (item.Status != KobiAsITS.Enums.ValueEnums.CompletedByteStatus)
                                        {
                                            <td>
                                                @Html.ActionLink("Düzenle ", "Edit", new { Id = item.Id }, new { @class = "btn btn-warning btn-sm btn-icon entypo-pencil" }) | 
                                                @Html.ActionLink("Detay", "Details", new { Id = item.Id }, new { @class = "btn btn-info btn-sm btn-icon entypo-pencil" })
                                                <!--ActionLink ile Buton İsmi, ActionName yazılır -->
                                            </td>
                                        }
                                        else
                                        {
                                            <td>@Html.ActionLink("Detay", "Details", new { Id = item.Id }, new { @class = "btn btn-info btn-sm btn-icon entypo-pencil" })</td>
                                        }
                                    }
                                </tr>
                             }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>