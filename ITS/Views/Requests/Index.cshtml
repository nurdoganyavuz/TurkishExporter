@model IEnumerable<KobiAsITS.Models.Request>

@{
    ViewData["Title"] = "Gelen Talepler";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<nav aria-label="...">
    <div class="pager">
        <a href="/Processes/Index" class="btn btn-primary"><span aria-hidden="true"></span>Onaylı Talepler</a>
    </div>
</nav>
<br />
<div class="row">
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Güncel Talepler Görüntülenmektedir.</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <div class="table-responsive" style="text-align:center">
                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th>Talep Id</th>
                                <th>Talep Başlığı</th>
                                <th>Talep Tanımı</th>
                                <th>Ekleyen Kişi</th>
                                <th>Ekleyen Birim</th>
                                <th>Öncelik Durumu</th>
                                <th>Onay Durumu</th>
                                @if (User.IsInRole("Admin"))
                                {
                                    <th>İşlemler</th>
                                }

                                </tr>
                        </thead>
                        <tbody>

                                @foreach (var item in Model)
                                {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RequestTitle)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RequestDescription)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.UserFirstName)
                                    @Html.DisplayFor(modelItem => item.User.UserLastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.Department.DepartmentName)

                                </td>

                                @{
                                    if (item.Priority == @KobiAsITS.Enums.ValueEnums.LowPriorityByte)
                                    {
                                        <td>@KobiAsITS.Enums.ValueEnums.LowPriority</td>
                                    }
                                    else if (item.Priority == @KobiAsITS.Enums.ValueEnums.MediumPriorityByte)
                                    {
                                        <td>@KobiAsITS.Enums.ValueEnums.MediumPriority</td>
                                    }
                                    else if (item.Priority == @KobiAsITS.Enums.ValueEnums.HighPriorityByte)
                                    {
                                        <td>@KobiAsITS.Enums.ValueEnums.HighPriority</td>
                                    }
                                    else if (item.Priority == @KobiAsITS.Enums.ValueEnums.UrgentPriorityByte)
                                    {
                                        <td>@KobiAsITS.Enums.ValueEnums.UrgentPriority</td>
                                    }
                                }
                                @{
                                    if (item.Status == KobiAsITS.Enums.ValueEnums.waitingByteStatus)
                                    {
                                        <td>@KobiAsITS.Enums.ValueEnums.waitingStatus</td>
                                    }
                                    else if (item.Status == KobiAsITS.Enums.ValueEnums.confirmByteStatus)
                                    {
                                        <td>@KobiAsITS.Enums.ValueEnums.confirmStatus</td>
                                    }
                                    else if (item.Status == KobiAsITS.Enums.ValueEnums.deniedByteStatus)
                                    {
                                        <td>@KobiAsITS.Enums.ValueEnums.deniedStatus</td>
                                    }



}
                                @if(User.IsInRole("Admin")){ 
                                
                            <td>
                                @Html.ActionLink("Düzenle ", "Edit", new { Uuid = item.Uuid }, new { @class = "btn btn-warning btn-sm btn-icon entypo-pencil" }) |
                                @Html.ActionLink("Sil ", "Delete", new { Uuid = item.Uuid }, new { @class = "btn btn-danger btn-sm btn-icon entypo-pencil" }) |
                                @Html.ActionLink("Detay", "Details", new { Uuid = item.Uuid }, new { @class = "btn btn-info btn-sm btn-icon entypo-pencil" })
                                <!--ActionLink ile Buton İsmi, ActionName yazılır -->
                            </td>
                                }

                                
                            </tr>
                            }

                            </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>